{
  "hash": "6ad2a598325ec241bfd7f3227f633fbc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Correlaciones (gráficos puntos)\"\n---\n\n\n\n\n\n## Comando básico\n\nPara crear gráficos de líneas se usa el comando `geom_point()`, y dentro del `aes()` se deben incluir dos variables (x, y) de carácter numérico.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n## Modificaciones\n\n### Añadir una tercera variable\n\n#### Cambiando el color de los puntos\n\nDentro del `aes()`, se usa la opción `color = variable`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g,\n             color = species)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n#### Cambiando la forma de los puntos\n\nDentro del `aes()`, se usa la opción `shape = variable`\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g,\n             shape = species)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-4-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n#### Cambiar ambos a la vez\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm, \n             y = body_mass_g,\n             color = species,\n             shape = species)) + \n  geom_point()\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-5-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n### Evitar el solapamiento de puntos\n\nCuando los puntos están muy juntos entre sí, puede resultar complicado distinguir unos de otros, especialmente si no todos los puntos tienen el mismo tamaño. Esto se puede solucionar combinando los comandos shape, fill y color.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\npenguins %>% \n  ggplot(aes(x = flipper_length_mm,\n             y = body_mass_g,\n             size = bill_depth_mm)) +\n  geom_point(shape = 21, #<1>\n             fill = \"#17589D\", #<2>\n             color = \"#FFFFFF\") #<3>\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n1.  shape = 21 indica que los símbolos deben ser circulares y con borde, lo que permite usar la opción de fill y de color.\n2.  fill establece el color de relleno de los círculos, azul en este caso.\n3.  color indica el color del borde de los círculos. Al añadir un borde blanco, es más fácil diferenciar unos puntos de otros.\n\n------------------------------------------------------------------------\n\n## Añadir una línea de regresión\n\nPara añadir una línea que indique las relaciones mostradas por el gráfico de puntos se superpone el gráfico `geom_smooth()` al `geom_point()`.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, \n       aes(x = flipper_length_mm,\n           y = body_mass_g))+\n  geom_point()+\n  geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n### Opciones de `geom_smooth`\n\n-   `method`: indica el tipo de función que se emplea a la hora de dibujar la línea. Si no se especifica, se seleccionará por defecto aquel que minimice el error. (*lm indica un modelo lineal*)\n\n-   `se`: puede ser TRUE si se quiere dejar el sombreado que indica el error, o FALSE si únicamente se quiere mostrar la línea.\n\n-   `linewidth`:\n\nSi se está dividiendo el gráfico en función de una tercera variable, es muy importante tener en cuenta dónde se especifica esta dentro del `aes`, ya que puede ser que a pesar de la división sólo interese mostrar una línea de regresión, o que queramos mostrar más.\n\n#### Una única línea\n\nEn el aes de ggplot se indican únicamente las variables comunes a los dos gráficos (x e y), mientras que si se quiere añadir una tercera variable para indicar el color se hará en un nuevo aes dentro de geom_point.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, \n       aes(x = flipper_length_mm,\n           y = body_mass_g))+\n  geom_point(aes(color = species))+\n  geom_smooth(method = \"lm\",\n              se = FALSE)\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n#### Varias líneas en función de una tercera variable\n\nEn este caso, el color se incluiría también dentro del es de ggplot, ya que lo que se busca es aplicar la división a todos los gráficos que se muestran en la imagen final.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(penguins, \n       aes(x = flipper_length_mm,\n           y = body_mass_g,\n           color = species))+\n  geom_point()+\n  geom_smooth(method = \"lm\",\n              se = FALSE)\n```\n\n::: {.cell-output-display}\n![](g-puntos_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=60%}\n:::\n:::\n\n\n\n------------------------------------------------------------------------\n\n## Ejemplos\n",
    "supporting": [
      "g-puntos_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}